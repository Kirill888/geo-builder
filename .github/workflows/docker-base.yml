name: build

on:
  push:
    branches-ignore:
      - 'stable-**'
    paths:
      - 'base/**'
      - 'local/**'
      - '.github/workflows/docker-base.yml'
      - '.github/workflows/bin/**'
  pull_request:
    branches-ignore:
      - 'stable-**'
    paths:
      - 'base/**'
      - 'local/**'
      - '.github/workflows/docker-base.yml'
      - '.github/workflows/bin/**'


env:
  ORG: opendatacube
  IMAGE: geobase
  IMAGE_DEV: geobase-dev
  DOCKER_USER: gadockersvc


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - name: Update PATH
      run: |
        echo "${GITHUB_WORKSPACE}/.github/workflows/bin" >> $GITHUB_PATH

    - name: Config
      id: cfg
      run: |
        ci-helper export_cfg

    - name: Env Dump (for debugging)
      run: |
        echo branch: ${BRANCH}
        echo im_main: ${im_main}
        echo im_extra: ${im_extra}
        echo im_fallback: ${im_fallback}
        echo images: ${im_builder} ${im_wheels} ${im_runner}
        echo build_info: ${build_info}
        echo push_image: cfg:${{ steps.cfg.outputs.push_image }} env:$push_image
        echo push_cache: cfg:${{ steps.cfg.outputs.push_cache }} env:$push_cache
        echo pull_cache: cfg:${{ steps.cfg.outputs.pull_cache }} env:$pull_cache


    - name: DockerHub Login
      if: steps.cfg.outputs.push_cache == 'yes' || steps.cfg.outputs.push_image == 'yes'
      run: |
        echo "Login to DockerHub as ${DOCKER_USER}"
        echo "${{ secrets.DockerPassword }}" | docker login -u "${DOCKER_USER}" --password-stdin 

    ###########################################
    # Builder
    ###########################################
    - name: Pull Cache (builder)
      if: steps.cfg.outputs.pull_cache == 'yes'
      run: |
        ci-helper pull_docker_cache ${im_builder} ${im_fallback/MMM/builder}

    - name: Base Image (builder)
      run: |
        docker build \
              --cache-from ${im_builder} \
              --tag        ${im_builder} \
              ./base/builder

    - name: DockerHub Push (builder)
      if: steps.cfg.outputs.push_image == 'yes'
      run: |
        docker push ${im_main/MMM/builder}

    ###########################################
    # Wheels
    ###########################################
    - name: Pull Cache (wheels)
      if: steps.cfg.outputs.pull_cache == 'yes'
      run: |
        ci-helper pull_docker_cache ${im_wheels} ${im_fallback/MMM/wheels}

    - name: Base Image (wheels)
      run: |
        docker build \
              --build-arg base=${im_builder} \
              --cache-from ${im_wheels} \
              --tag        ${im_wheels} \
              ./base/wheels

    - name: DockerHub Push (wheels)
      if: steps.cfg.outputs.push_image == 'yes'
      run: |
        docker push ${im_wheels}


    ###########################################
    # Runner
    ###########################################
    - name: Pull Cache (runner)
      if: steps.cfg.outputs.pull_cache == 'yes'
      run: |
        ci-helper pull_docker_cache ${im_runner} ${im_fallback/MMM/runner}

    - name: Base Image (runner)
      run: |
        docker build \
              --build-arg base=${im_builder} \
              --cache-from ${im_runner} \
              --tag        ${im_runner} \
              ./base/runner

    - name: DockerHub Push (runner)
      if: steps.cfg.outputs.push_image == 'yes'
      run: |
        docker push ${im_runner}

    #############################################
    # local
    #############################################
    - name: Test Image (local)
      run: |
        docker build \
          --build-arg base=${im_wheels} \
          --build-arg USER_NAME=$USER \
          --build-arg UID=$UID \
          --tag geobase:local ./local
        docker run --rm geobase:local gdal-config --version
        docker run --rm geobase:local gdal-config --formats

    - name: Push Extra tags (develop branch only)
      if: steps.cfg.outputs.im_extra != '' && steps.cfg.outputs.push_image == 'yes'
      run: |
        docker tag ${im_builder} ${im_extra/MMM/builder}
        docker tag ${im_wheels} ${im_extra/MMM/wheels}
        docker tag ${im_runner} ${im_extra/MMM/runner}

        docker push ${im_extra/MMM/builder}
        docker push ${im_extra/MMM/wheels}
        docker push ${im_extra/MMM/runner}

    - name: Run vulnerability scanner (builder)
      uses: aquasecurity/trivy-action@0.0.6
      continue-on-error: true
      with:
        image-ref: ${{steps.cfg.outputs.im_builder}}
        format: "table"
        exit-code: "1"
        severity: "CRITICAL,HIGH"

    - name: Run vulnerability scanner (wheels)
      uses: aquasecurity/trivy-action@0.0.6
      continue-on-error: true
      with:
        image-ref: ${{steps.cfg.outputs.im_wheels}}
        format: "table"
        exit-code: "1"
        severity: "CRITICAL,HIGH"

    - name: Run vulnerability scanner (runner)
      uses: aquasecurity/trivy-action@0.0.6
      with:
        image-ref: ${{steps.cfg.outputs.im_runner}}
        format: "table"
        exit-code: "1"
        severity: "CRITICAL,HIGH"
