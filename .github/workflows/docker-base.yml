name: build

on:
  push:
    branches-ignore:
      - 'stable-**'
    paths:
      - 'base/**'
      - 'local/**'
      - '.github/workflows/docker-base.yml'
      - '.github/workflows/*sh'


env:
  ORG: opendatacube
  IMAGE: geobase
  DOCKER_USER: gadockersvc


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - name: DockerHub Login
      if: github.event_name == 'push'
      run: |
        source .github/workflows/ci-helpers.sh
        echo "Login to DockerHub as ${DOCKER_USER}"
        echo "${{ secrets.DockerPassword }}" | docker login -u "${DOCKER_USER}" --password-stdin 

    - name: Base Image (builder)
      run: |
        source .github/workflows/ci-helpers.sh
        pull_docker_cache ${ORG}/${IMAGE}:${BUILDER_TAG} \
                          ${ORG}/${IMAGE}:builder
        docker build \
              --cache-from ${ORG}/${IMAGE}:${BUILDER_TAG} \
              --tag        ${ORG}/${IMAGE}:${BUILDER_TAG} \
              ./base/builder

    - name: DockerHub Push (builder)
      if: github.event_name == 'push'
      run: |
        source .github/workflows/ci-helpers.sh
        docker push ${ORG}/${IMAGE}:${BUILDER_TAG}

    - name: Base Image (wheels)
      run: |
        source .github/workflows/ci-helpers.sh
        pull_docker_cache ${ORG}/${IMAGE}:${WHEELS_TAG} \
                          ${ORG}/${IMAGE}:wheels
        docker build \
              --build-arg base=${ORG}/${IMAGE}:${BUILDER_TAG} \
              --cache-from ${ORG}/${IMAGE}:${WHEELS_TAG} \
              --tag        ${ORG}/${IMAGE}:${WHEELS_TAG} \
              ./base/wheels

    - name: DockerHub Push (wheels)
      if: github.event_name == 'push'
      run: |
        source .github/workflows/ci-helpers.sh
        docker push ${ORG}/${IMAGE}:${WHEELS_TAG}

    - name: Base Image (runner)
      run: |
        source .github/workflows/ci-helpers.sh
        pull_docker_cache ${ORG}/${IMAGE}:${RUNNER_TAG} \
                          ${ORG}/${IMAGE}:runner
        docker build \
              --build-arg base=${ORG}/${IMAGE}:${BUILDER_TAG} \
              --cache-from ${ORG}/${IMAGE}:${RUNNER_TAG} \
              --tag        ${ORG}/${IMAGE}:${RUNNER_TAG} \
              ./base/runner

    - name: DockerHub Push (runner)
      if: github.event_name == 'push'
      run: |
        source .github/workflows/ci-helpers.sh
        docker push ${ORG}/${IMAGE}:${RUNNER_TAG}

    - name: Run vulnerability scanner (builder)
      if: github.event_name == 'push'
      uses: aquasecurity/trivy-action@0.0.6
      with:
        image-ref: ${ORG}/${IMAGE}:${BUILDER_TAG}
        format: "table"
        exit-code: "1"
        severity: "CRITICAL,HIGH"

    - name: Run vulnerability scanner (runner)
      if: github.event_name == 'push'
      uses: aquasecurity/trivy-action@0.0.6
      with:
        image-ref: ${ORG}/${IMAGE}:${RUNNER_TAG}
        format: "table"
        exit-code: "1"
        severity: "CRITICAL,HIGH"

    - name: Run vulnerability scanner (wheels)
      if: github.event_name == 'push'
      uses: aquasecurity/trivy-action@0.0.6
      with:
        image-ref: ${ORG}/${IMAGE}:${WHEELS_TAG}
        format: "table"
        exit-code: "1"
        severity: "CRITICAL,HIGH"

    - name: Test Image (local)
      run: |
        source .github/workflows/ci-helpers.sh
        docker build \
          --build-arg base=${ORG}/${IMAGE}:${WHEELS_TAG} \
          --build-arg USER_NAME=$USER \
          --build-arg UID=$UID \
          --tag geobase:local ./local
        docker run --rm geobase:local gdal-config --version
        docker run --rm geobase:local gdal-config --formats
