#!/bin/bash

set -o errexit
set -o pipefail
set -o nounset

branch_name () {
    local ref="${1:-${GITHUB_REF:-}}"
    case "${ref}" in
        "refs/heads/"*)
            echo "${ref#refs/heads/}"
            ;;
        "refs/tags/"*)
            echo "${ref#refs/tags/}"
            ;;
        "refs/pull/"*)
            if [ -z "${GITHUB_HEAD_REF:-}" ] ; then
                return 1
            else
                echo "${GITHUB_HEAD_REF}"
            fi
            ;;
        *)
            return 1
            ;;
    esac
}

export_cfg () {
    local ref="${1:-${GITHUB_REF:-}}"
    local sha="${2:-${GITHUB_SHA:-missing_sha}}"

    pull_cache="yes"  # always yes for now
    push_cache="yes"  # not from PR, not from Release
    push_image="yes"  # not from PR

    im_extra=""       # only set on master
    im_fallback=${ORG}/${IMAGE}:MMM

    build_info="$(TZ=Australia/Sydney date -Im) $sha"

    case "${ref}" in
        "refs/heads/master")
            BRANCH="master"
            # figure out extra tag
            git fetch --prune --unshallow 2> /dev/null || true
            vv=$(git describe --tags)

            im_main=${ORG}/${IMAGE}:MMM  # MMM is one of builder|runner|wheels
            im_extra=${ORG}/${IMAGE_DEV}:MMM-${vv}
            ;;
        "refs/heads/"*)
            BRANCH="${ref#refs/heads/}"
            im_main=${ORG}/${IMAGE_DEV}:${BRANCH}-MMM
            ;;
        "refs/tags/"*)
            push_cache="no"
            BRANCH="${ref#refs/tags/}"
            im_main=${ORG}/${IMAGE}:MMM-${BRANCH}
            ;;
        "refs/pull/"*)
            if [ -z "${GITHUB_HEAD_REF:-}" ] ; then
                return 1
            fi
            push_cache="no"
            push_image="no"
            BRANCH="${GITHUB_HEAD_REF}"
            im_main=${ORG}/${IMAGE_DEV}:${BRANCH}-MMM
            ;;
        *)
            return 1
            ;;
    esac
    im_builder=${im_main/MMM/builder}
    im_wheels=${im_main/MMM/wheels}
    im_runner=${im_main/MMM/runner}

    all_envs='BRANCH
      pull_cache
      push_cache
      push_image
      im_main
      im_extra
      im_fallback
      im_builder
      im_runner
      im_wheels
      build_info'

    for x in $all_envs; do
        export "${x}"                         # make it available to calling script
        echo "::set-env name=${x}::${!x}"     # make it available to subsequent Actions
        echo "::set-output name=${x}::${!x}"  # make it available to subsequent Actions inside if:
    done
}

pull_docker_cache () {
    local image=${1}
    local fallback=${2:-}

    if docker pull $image ; then
        echo "Pulled ${image}"
    else
        if [ -n "${fallback}" ]; then
            echo "Pulling fallback ${fallback}"
            if docker pull $fallback ; then
                echo "Using fallback: ${fallback}"
                docker tag $fallback $image
                docker rmi "$fallback"
            fi
        fi
    fi
}

[ $# -eq 0 ] || {
    cmd=$1
    shift
    $cmd $@
}
